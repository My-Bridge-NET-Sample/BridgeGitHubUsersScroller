Bridge.assembly("BridgeClient",function(){"use strict";Bridge.define("BridgeClient.App",{main:function(){document.body.appendChild(BridgeClient.App.Container);document.body.onscroll=Bridge.fn.combine(document.body.onscroll,BridgeClient.App.OnScroll);BridgeClient.App.OnScroll(null)},statics:{props:{Container:null,LastUserId:0},ctors:{init:function(){this.Container=function(_o1){return _o1.classList.add("ui"),_o1.classList.add("segment"),_o1.classList.add("link"),_o1.classList.add("cards"),_o1}(document.createElement("div"))}},methods:{OnScroll:function(){var $step=0,$task1,$taskResult1,lastChild,users,$t,user,$asyncBody=Bridge.fn.bind(this,function(){for(;;){$step=System.Array.min([0,1,2,3,4],$step);switch($step){case 0:document.body.onscroll=Bridge.fn.remove(document.body.onscroll,BridgeClient.App.OnScroll);lastChild=System.Linq.Enumerable.from(BridgeClient.App.Container.children).lastOrDefault(null,null);$step=1;continue;case 1:if(lastChild==null||lastChild.offsetTop<=window.pageYOffset+window.innerHeight*1.5){$step=2;continue}$step=4;continue;case 2:$task1=BridgeClient.App.GetNextUsers();$step=3;$task1.continueWith($asyncBody,!0);return;case 3:$taskResult1=$task1.getAwaitedResult();users=$taskResult1;$t=Bridge.getEnumerator(users);try{while($t.moveNext())user=$t.Current,BridgeClient.App.Container.appendChild(BridgeClient.App.CreateCard(user))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$dispose()}lastChild=System.Linq.Enumerable.from(BridgeClient.App.Container.children).lastOrDefault(null,null);$step=1;continue;case 4:document.body.onscroll=Bridge.fn.combine(document.body.onscroll,BridgeClient.App.OnScroll);return;default:return}}},arguments);$asyncBody()},CreateCard:function(user){var $t,card=($t=document.createElement("div"),$t.className="card",$t.onclick=function(){window.location.href=user.html_url},$t),image=($t=document.createElement("div"),$t.className="image",$t),content;return image.appendChild(($t=new Image,$t.src=user.avatar_url,$t)),content=($t=document.createElement("div"),$t.className="content",$t),content.appendChild(($t=document.createElement("div"),$t.className="header",$t.textContent=user.login,$t)),card.appendChild(image),card.appendChild(content),card},GetNextUsers:function(){var tcs=new System.Threading.Tasks.TaskCompletionSource,req=new XMLHttpRequest;return req.responseType="json",req.open("GET","https://api.github.com/users?since="+BridgeClient.App.LastUserId),req.onloadend=Bridge.fn.combine(req.onloadend,function(){var users=Bridge.cast(req.response,System.Array.type(BridgeServer.DTO.GitHubUser));BridgeClient.App.LastUserId=BridgeClient.App.LastUserId+users.length|0;tcs.setResult(users)}),req.send(),tcs.task}}}});Bridge.define("BridgeServer.DTO.GitHubUser",{props:{login:null,avatar_url:null,html_url:null}})});
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAiZmlsZSI6ICJCcmlkZ2VDbGllbnQubWluLmpzIiwKICAic291cmNlUm9vdCI6ICIiLAogICJzb3VyY2VzIjogW10sCiAgIm5hbWVzIjogW10sCiAgIm1hcHBpbmdzIjogIiIsCiAgInNvdXJjZXNDb250ZW50IjogW10KfQo=
